package days04.board.persistence;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class BoardDAOImpl implements BoardDAO{
	
	private Connection conn = null; //= DBConn.getConnection()  X
	private PreparedStatement  pstmt = null;
	private ResultSet rs = null; 

	// 생성자 DI
	public BoardDAOImpl(Connection conn) {
		super();
		this.conn = conn;
	}

	@Override
	public ArrayList<BoardDTO> select() throws SQLException {
		// TODO Auto-generated method stub
		return null;
		
		public ArrayList<BoardDTO> select() throws SQLException {
			long seq;
			String title, writer, email;
			Date writedate;
			int readed;

			ArrayList<BoardDTO> list = null;

			String sql = 
					"SELECT seq, title, writer, email, writedate, readed "
							+ "FROM tbl_cstVSBoard "
							+ "ORDER BY seq DESC";

			// 부서조회() S
			BoardDTO dto = null;

			try {			
				pstmt = conn.prepareStatement(sql);
				rs = pstmt.executeQuery();

				if (rs.next()) {
					list = new ArrayList<BoardDTO>();
					do {
						// seq, title, writer, email, writedate, readed 
						seq = rs.getLong("seq");
						title = rs.getString("title");
						writer = rs.getString("writer");
						email = rs.getString("email");
						writedate = rs.getDate("writedate");
						readed = rs.getInt("readed");
						dto = new BoardDTO().builder()
								.seq(seq)
								.title(title)
								.writedate(writedate)
								.writer(writer)
								.email(email)
								.readed(readed)
								.build();
						list.add(dto);
					} while (rs.next());

				} // if

			} catch (SQLException e) { 
				e.printStackTrace();
			} finally {
				try {
					rs.close();
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			// 부서조회() E

			return list;
		
		
	}

}
